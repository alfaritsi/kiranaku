<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

require_once(dirname(__FILE__) . DIRECTORY_SEPARATOR . 'Mrapp_functions.php');

class Mrapp_functions_purchasing extends Mrapp_functions
{

    public function runFunction($method = null, $report = null, $data = null, $parameters = [])
    {
        return parent::runFunction($method, $report, $data, $parameters); // TODO: Change the autogenerated stub
    }


    public function runAlert($params = [])
    {
        return parent::runAlert($params); // TODO: Change the autogenerated stub
    }

    protected function pur_ocp($method = 'report')
    {

        if ($method == 'report') {

            $json = array(
                'message' => 'Function Error'
            );

            if (isset($this->report->report_function) && $this->report->report_function == "pur_ocp") {

                $tanggal_filter = date('Y-m-d');

                $this->CI->general->connectDbPortal();

                $this->CI->db->query("SET ANSI_NULLS ON");
                $this->CI->db->query("SET ANSI_WARNINGS ON");

                $tanggal_filter = $this->cek_hari_kerja($tanggal_filter);

                $tanggal_awal = date('Y-m-01', strtotime($tanggal_filter));

                $tanggal_akhir = date('Y-m-t', strtotime($tanggal_filter));

                $auth_plants = $this->CI->mrapp_master->auth_plant($this->post_data['id_user']);
                $queryParams = array($tanggal_filter);
                if(count($auth_plants)>0)
                {
                    $filterPlants = 'and p.kode in ?';
                    $queryParams[] = $auth_plants;
                }else
                    $filterPlants = '';

                $query = $this->CI->db->query("select 
                    p.kode PLANT,
                    (b.QTOUM*-1) as OCPMT,
                    MPVPR
                    from tbl_inv_pabrik p 
                    left outer join [10.0.0.32].SAPSYNC.dbo.ZDMPURBKR04 b on b.EKORG=p.kode COLLATE SQL_Latin1_General_CP1_CS_AS
                    where 
                    b.BEDAT = ?
                    $filterPlants
                    AND
                    p.na='n' and p.del='n' and p.kode not in('NSI2', 'NSI3','KPK1', 'KMTR') order by (b.QTOUM*-1) ASC",
                    $queryParams
                );

                $header_data = $query->result();

                $headers = array();

                $details = array();

                foreach ($header_data as $data) {
                    $header['title'] = $data->PLANT;
                    $header['items'] = array(
                        array(
                            'label' => 'OCP (MT)',
                            'value' => number_format($data->OCPMT, 0, ',', '.'),
                            'mark' => 'TON'
                        ),
                        array(
                            'label' => 'OCP (%)',
                            'value' => number_format($data->MPVPR, 0, ',', '.'),
                            'mark' => '%'
                        )
                    );

                    $query = $this->CI->db->query("select 
                    b.QTMOU
                    from [10.0.0.32].SAPSYNC.dbo.ZDMPURBKR04 b
                    where 
                    b.EKORG = ? AND
                    b.BEDAT = ?",
                        array($data->PLANT, $tanggal_awal)
                    );

                    $under_buy_data = $query->row();

                    $under_buy = $under_buy_data->QTMOU < 0 ? 0 : $under_buy_data->QTMOU * -1;

                    $query = $this->CI->db->query("select 
                    SUM(QTREG+QTCNT) AS jumlah 
                    from [10.0.0.32].SAPSYNC.dbo.ZDMPURBKR01 
                    where PLAFL='' and EKORG= ?
                    and BEDAT between ? and ?",
                        array($data->PLANT, $tanggal_awal, $tanggal_akhir)
                    );

                    $beli_mtd_data = $query->row();

                    $beli_mtd = $beli_mtd_data->jumlah < 0 ? 0 : $beli_mtd_data->jumlah / 1000;

                    $query = $this->CI->db->query("select 
                    SUM(QTMTG) AS jumlah 
                    from [10.0.0.32].SAPSYNC.dbo.ZDMPURBKR04
                    where EKORG= ?
                    and BEDAT between ? and ?",
                        array($data->PLANT, $tanggal_awal, $tanggal_filter)
                    );

                    $target_mtd_data = $query->row();

                    $target_mtd = $target_mtd_data->jumlah < 0 ? 0 : $target_mtd_data->jumlah;

                    $detail['title'] = 'Detail ' . $data->PLANT;
                    $detail['type'] = 'single';

                    $detail['items'] = array(
                        array(
                            'label' => 'Underbuy Bulan Lalu',
                            'value' => number_format($under_buy, 0, ',', '.'),
                        ),
                        array(
                            'label' => 'Target QTY MTD (Ton)',
                            'value' => number_format($target_mtd, 0, ',', '.'),
                        ),
                        array(
                            'label' => 'Aktual QTY MTD (Ton)',
                            'value' => number_format($beli_mtd, 0, ',', '.'),
                        ),
                        array(
                            'label' => 'OCP (MT)',
                            'value' => number_format($data->OCPMT, 0, ',', '.'),
                            'mark' => 'TON'
                        ),
                        array(
                            'label' => 'OCP (%)',
                            'value' => number_format($data->MPVPR, 2, ',', '.'),
                            'mark' => '%'
                        )
                    );

                    $headers[] = $header;
                    $details[] = $detail;
                }

                $json['status'] = true;
                $json['message'] = 'Report found';
                $json['data']['headers'] = $headers;
                $json['data']['details'] = $details;

                $json['data']['filters'] = array(
                    "applied" => $this->filters,
                    "components" => array(
                        array(
                            "name" => "PLANT",
                            "type" => "MULTISELECT",
                            "multiple" => true,
                            "master" => 'plants',
                            "default" => $this->CI->mrapp_master->auth_plant($this->post_data['id_user'])
                        ),
                        array(
                            "name" => "PERIODE",
                            "type" => "DATE",
                            "format" => "YYYY-MM",
                            "default" => date('Y-m', time())
                        ),
                    )
                );
            }

            return $json;
        } else {

            $alert = [];

            if (isset($this->report->report_function) && $this->report->report_function == "pur_ocp") {

                $tanggal_filter = date('Y-m-d');

                $tanggal_filter = $this->cek_hari_kerja($tanggal_filter);

                $this->CI->general->connectDbPortal();

                foreach ($this->thresholds as $threshold) {
                    $thresholdFilter = " AND " . $threshold->threshold_kolom . " "
                        . $this->CI->mrapp_format->threshold_format_ukuran(
                            $threshold->threshold_type,
                            $threshold->threshold_value,
                            ''
                        );

                    $query = $this->CI->db->query("select 
                        p.kode PLANT,
                        (b.QTOUM*-1) as OCPMT,
                        MPVPR
                        from tbl_inv_pabrik p 
                        left outer join [10.0.0.32].SAPSYNC.dbo.ZDMPURBKR04 b on b.EKORG=p.kode COLLATE SQL_Latin1_General_CP1_CS_AS
                        where 
                        b.BEDAT = ?
                        $thresholdFilter
                        AND
                        p.na='n' and p.del='n' and p.kode not in('NSI2', 'NSI3','KPK1', 'KMTR') 
                        order by (b.QTOUM*-1) ASC",
                        array($tanggal_filter)
                    );

                    $data = $query->result();

                    if (isset($data) && $query->num_rows() > 0) {
                        $plants = array();
                        foreach ($data as $d) {
                            $plants[] = $d->PLANT;
                        }
                        $alert[] = array(
                            'id_report' => $this->report->id_report,
                            'id_report_threshold' => $threshold->id_report_threshold,
                            'title' => $threshold->nama_threshold . " "
                                . $this->CI->mrapp_format->threshold_format_ukuran(
                                    $threshold->threshold_type,
                                    $threshold->threshold_value,
                                    $threshold->satuan
                                ),
                            'timestamp' => time(),
                            'data' => array(
                                'plants' => $plants
                            )
                        );
                    }
                }
            }

            return $alert;
        }
    }

    protected function batch_susut_1persen($method = 'report')
    {
        if ($method == 'report') {

            $json = array(
                'message' => 'Function Error'
            );

            if (isset($this->report->report_function) && $this->report->report_function == "batch_susut_1persen") {

                $this->CI->general->connectDbDefault();

                $this->CI->db->query("SET ANSI_NULLS ON");
                $this->CI->db->query("SET ANSI_WARNINGS ON");

                $periode_filter = isset($this->post_data['periode']) ? $this->post_data['periode'] : date('Ym', strtotime('-1 month'));
                $plant_auth = $this->CI->mrapp_master->auth_plant($this->post_data['id_user']);
                $plant_filter = isset($this->post_data['plant']) ? $this->post_data['plant'] : $plant_auth;

                $headers = array();

                $details = array();

                $query = $this->CI->db->query(
                    'EXEC DashBoardDev.dbo.SP_MRAPP_PUR0052 ?, ?, 1',
                    array($periode_filter, join('.', $plant_filter))
                );

                $plants = $query->result();

                foreach ($plants as $plant) {
                    $sign = '';
                    $qtySusut = number_format($plant->qtysusut, 2, ',', '.');
                    $qtySusutPersen = number_format($plant->persensusut, 2, ',', '.');
                    if ($plant->persensusut < -1) {
                        $sign = 'negative';
                        $qtySusut = '(' . number_format(abs($plant->qtysusut), 2, ',', '.') . ')';
                        $qtySusutPersen = '(' . number_format(abs($plant->persensusut), 2, ',', '.') . ')';
                    }
                    $header['title'] = $plant->plant;
                    $header['items'] = array(
                        array(
                            'label' => 'QTY Susut/Lebih',
                            'value' => $qtySusut,
                            'mark' => 'TON',
                            'sign' => $sign
                        ),
                        array(
                            'label' => '% Susut/Lebih',
                            'value' => $qtySusutPersen,
                            'mark' => '%',
                            'sign' => $sign
                        )
                    );

                    $queryDetail = $this->CI->db->query(
                        'EXEC dbo.SP_MRAPP_PUR0052 ?, ?, 0',
                        array($periode_filter, $plant->plant)
                    );

                    $detail_datas = $queryDetail->result();

                    $detail['title'] = 'Detail ' . $plant->plant;
                    $detail['type'] = 'list';
                    $detail['items'] = array();

                    foreach ($detail_datas as $detail_data) {
                        $list['title'] = $detail_data->batch;

                        $qtySusut = number_format($detail_data->qtysusut, 2, ',', '.');
                        $qtySusutPersen = number_format($detail_data->persensusut, 2, ',', '.');
                        $signQtySusut = '';
                        if ($detail_data->qtysusut < 0) {
                            $qtySusut = '(' . number_format(abs($detail_data->qtysusut), 2, ',', '.') . ')';
                            $qtySusutPersen = '(' . number_format(abs($detail_data->persensusut), 2, ',', '.') . ')';
                            $signQtySusut = 'negative';
                        }
                        $list['items'] = array(
                            array(
                                'label' => 'Tonase',
                                'value' => number_format($detail_data->qtyton, 2, ',', '.'),
                                'mark' => 'TON'
                            ),
                            array(
                                'label' => 'QTY Susut/Lebih',
                                'value' => $qtySusut,
                                'mark' => 'TON',
                                'sign' => $signQtySusut
                            ),
                            array(
                                'label' => '(%) Susut/Lebih',
                                'value' => $qtySusutPersen,
                                'mark' => '%',
                                'sign' => $signQtySusut
                            ),
                        );
                        $detail['items'][] = $list;
                    }

                    $headers[] = $header;
                    $details[] = $detail;
                }

                $json['status'] = true;
                $json['message'] = 'Report found';
                $json['data']['headers'] = $headers;
                $json['data']['details'] = $details;
            }

            return $json;
        } else {
            $alert = array();

            if (isset($this->report->report_function) && $this->report->report_function == "batch_susut_1persen") {

                $this->CI->general->connectDbPortal();

                $this->CI->db->query("SET ANSI_NULLS ON");
                $this->CI->db->query("SET ANSI_WARNINGS ON");

                $periode_filter = isset($this->post_data['periode']) ? $this->post_data['periode'] : date('Ym', strtotime('-1 month'));

                foreach ($this->thresholds as $threshold) {
                    $query = $this->CI->db->query(
                        'EXEC DashBoardDev.dbo.SP_MRAPP_PUR0052 ?, ?,1, ?',
                        array($periode_filter, null, $threshold->threshold_value)
                    );

                    $data = $query->result();

                    if (isset($data) && $query->num_rows() > 0) {
                        $plants = array();
                        foreach ($data as $d) {
                            $plants[] = $d->plant;
                        }
                        $alert[] = array(
                            'id_report' => $this->report->id_report,
                            'id_report_threshold' => $threshold->id_report_threshold,
                            'title' => $threshold->nama_threshold,
                            'timestamp' => time(),
                            'data' => array(
                                'plants' => $plants
                            )
                        );
                    }
                }
            }

            return $alert;
        }
    }

    protected function kinerja_supplier($method = 'report')
    {
        if ($method == 'report') {


            $json = array(
                'message' => 'Function Error'
            );

            if (isset($this->report->report_function) && $this->report->report_function == "kinerja_supplier") {

                $this->CI->general->connectDbDefault();

                $this->CI->db->query("SET ANSI_NULLS ON");
                $this->CI->db->query("SET ANSI_WARNINGS ON");

                $periode_filter = isset($this->post_data['periode']) ? $this->post_data['periode'] : date('Y-m');
                $plant_auth = $this->CI->mrapp_master->auth_plant($this->post_data['id_user']);
                $plant_filter = isset($this->post_data['plant']) ? $this->post_data['plant'] : $plant_auth;

                $headers = array();

                $details = array();

                $query = $this->CI->db->query(
                    'EXEC DashBoardDev.dbo.SP_MRAPP_PUR010 ?, ?, 0',
                    array(join('.', $plant_filter), $periode_filter)
                );

                $data_depos = $query->result();

                $plants = array();

                foreach ($data_depos as $data_depo) {
                    if (array_search($data_depo->PLANT, $plants) === false)
                        $plants[] = $data_depo->PLANT;
                };

                foreach ($plants as $plant) {
                    $header['title'] = $plant;

                    $detail['title'] = 'Detail ' . $plant;
                    $detail['type'] = 'list';
                    $detail['items'] = array();

                    foreach ($data_depos as $data_depo) {
                        if ($plant == $data_depo->PLANT) {
                            $list['title'] = 'Pembelian ' . $data_depo->PEMBELIAN;
                            if ($data_depo->PEMBELIAN == 'Depo') {
                                $list['items'] = array(
                                    array(
                                        'label' => 'Depo',
                                        'value' => $data_depo->DEPO
                                    ),
                                    array(
                                        'label' => 'Jumlah Supplier Kinerja <80%',
                                        'value' => $data_depo->JUMLAH
                                    ),
                                    array(
                                        'label' => 'Total Supplier',
                                        'value' => $data_depo->TOTALDEPO
                                    ),
                                    array(
                                        'label' => 'Peningkatan Tertinggi dlm 6 Bulan',
                                        'value' => number_format($data_depo->MAXPERSEN, 2, ',', '.'),
                                        'mark' => '%'
                                    )
                                );
                            } else {
                                $list['items'] = array(
                                    array(
                                        'label' => 'Jumlah Supplier Kinerja <80%',
                                        'value' => $data_depo->JUMLAH
                                    ),
                                    array(
                                        'label' => 'Total Supplier',
                                        'value' => $data_depo->TOTALDEPO
                                    ),
                                    array(
                                        'label' => 'Peningkatan Tertinggi dlm 6 Bulan',
                                        'value' => number_format($data_depo->MAXPERSEN, 2, ',', '.'),
                                        'mark' => '%'
                                    )
                                );
                            }

                            $detail['items'][] = $list;
                        }
                    }

                    $headers[] = $header;
                    $details[] = $detail;
                }

                $json['status'] = true;
                $json['message'] = 'Report found';
                $json['data']['headers'] = $headers;
                $json['data']['details'] = $details;
            }

            return $json;
        } else {
            $alert = array();

            if (isset($this->report->report_function) && $this->report->report_function == "kinerja_supplier") {

                $this->CI->general->connectDbPortal();

                $this->CI->db->query("SET ANSI_NULLS ON");
                $this->CI->db->query("SET ANSI_WARNINGS ON");

                $periode_filter = isset($this->post_data['periode']) ? $this->post_data['periode'] : date('Ym', strtotime('-1 month'));

                foreach ($this->thresholds as $threshold) {

                    $query = $this->CI->db->query(
                        'EXEC DashBoardDev.dbo.SP_MRAPP_PUR010 ?, ?, 0',
                        array(null, $periode_filter)
                    );

                    $data = $query->result();

                    if (isset($data) && $query->num_rows() > 0) {
                        $plants = array();
                        foreach ($data as $d) {
                            $plants[] = $d->plant;
                        }
                        $alert[] = array(
                            'id_report' => $this->report->id_report,
                            'id_report_threshold' => $threshold->id_report_threshold,
                            'title' => $threshold->nama_threshold,
                            'timestamp' => time(),
                            'data' => array(
                                'plants' => $plants
                            )
                        );
                    }
                }
            }

            return $alert;
        }
    }

    protected function kinerja_depo_target($method = 'report')
    {
        if ($method == 'report') {

            $json = array(
                'message' => 'Function Error'
            );

            if (isset($this->report->report_function) && $this->report->report_function == "kinerja_depo_target") {
                $this->CI->general->connectDbDefault();

                $this->CI->db->query("SET ANSI_NULLS ON");
                $this->CI->db->query("SET ANSI_WARNINGS ON");

                $periode_filter = isset($this->post_data['periode']) ? $this->post_data['periode'] : date('Y-m');
                $periode_filter = DateTime::createFromFormat('Y-m', $periode_filter)->format('Ym');
                $plant_auth = $this->CI->mrapp_master->auth_plant($this->post_data['id_user']);
                $plant_filter = isset($this->post_data['plant']) ? $this->post_data['plant'] : $plant_auth;

                $headers = array();

                $details = array();

                $query = $this->CI->db->query(
                    'EXEC DashBoardDev.dbo.SP_MRAPP_PURDEPO_01 ?, ?',
                    array(join(',', $plant_filter), $periode_filter)
                );

                $data_depos = $query->result();

//                return array($periode_filter,$plant_filter,$data_depos);

                $plants = array();

                foreach ($data_depos as $data_depo) {
                    if (array_search($data_depo->PLANT, $plants) === false)
                        $plants[] = $data_depo->PLANT;
                };

                foreach ($plants as $plant) {
                    $header['title'] = $plant;

                    $detail['title'] = 'Detail ' . $plant;
                    $detail['type'] = 'list';
                    $detail['items'] = array();

                    foreach ($data_depos as $data_depo) {
                        if ($plant == $data_depo->PLANT) {

                            $list['items'] = array(
                                array(
                                    'label' => 'Depo',
                                    'value' => $data_depo->DEPO
                                ),
                                array(
                                    'label' => 'Target',
                                    'value' => number_format($data_depo->TARGET, 2, ',', '.'),
                                    'mark' => ' TON'
                                ),
                                array(
                                    'label' => 'Actual',
                                    'value' => number_format($data_depo->ACTUAL, 2, ',', '.'),
                                    'mark' => ' TON'
                                ),
                                array(
                                    'label' => 'Pembelian tercapai',
                                    'value' => number_format($data_depo->PERSEN, 2, ',', '.'),
                                    'mark' => '%'
                                )
                            );
                            $detail['items'][] = $list;
                        }
                    }

                    $headers[] = $header;
                    $details[] = $detail;
                }

                $json['status'] = true;
                $json['message'] = 'Report found';
                $json['data']['headers'] = $headers;
                $json['data']['details'] = $details;
            }

            return $json;
        }
    }

    protected function kinerja_depo_menurun($method = 'report')
    {
        if ($method == 'report') {

            $json = array(
                'message' => 'Function Error'
            );

            if (isset($this->report->report_function) && $this->report->report_function == "kinerja_depo_menurun") {
                $this->CI->general->connectDbDefault();

                $this->CI->db->query("SET ANSI_NULLS ON");
                $this->CI->db->query("SET ANSI_WARNINGS ON");

                $periode_filter = isset($this->post_data['periode']) ? $this->post_data['periode'] : date('Y-m');
                $periode_filter = DateTime::createFromFormat('Y-m', $periode_filter)->format('Ym');
                $plant_auth = $this->CI->mrapp_master->auth_plant($this->post_data['id_user']);
                $plant_filter = isset($this->post_data['plant']) ? $this->post_data['plant'] : $plant_auth;

                $headers = array();

                $details = array();

                $query = $this->CI->db->query(
                    'EXEC DashBoardDev.dbo.SP_MRAPP_PURDEPO_02 ?, ?',
                    array(join(',', $plant_filter), $periode_filter)
                );

                $data_depos = $query->result();

                $plants = array();

                foreach ($data_depos as $data_depo) {
                    if (array_search($data_depo->PLANT, $plants) === false)
                        $plants[] = $data_depo->PLANT;
                };

                foreach ($plants as $plant) {
                    $header['title'] = $plant;

                    $detail['title'] = 'Detail ' . $plant;
                    $detail['type'] = 'list';
                    $detail['items'] = array();

                    foreach ($data_depos as $data_depo) {
                        if ($plant == $data_depo->PLANT) {
                            $persen = 100 - $data_depo->PERSEN;
                            $signPersen = '';

                            if ($data_depo->PERSEN <= 90)
                                $signPersen = 'negative';

                            $list['items'] = array(
                                array(
                                    'label' => 'Depo',
                                    'value' => $data_depo->DEPO
                                ),
                                array(
                                    'label' => 'Periode 1',
                                    'value' => number_format($data_depo->PERIODE1, 2, ',', '.'),
                                    'mark' => ' TON'
                                ),
                                array(
                                    'label' => 'Periode 2',
                                    'value' => number_format($data_depo->PERIODE2, 2, ',', '.'),
                                    'mark' => ' TON'
                                ),
                                array(
                                    'label' => 'Penurunan Kinerja',
                                    'value' => number_format($persen, 2, ',', '.'),
                                    'mark' => '%',
                                    'sign' => $signPersen
                                )
                            );
                            $detail['items'][] = $list;
                        }
                    }

                    $headers[] = $header;
                    $details[] = $detail;
                }

                $json['status'] = true;
                $json['message'] = 'Report found';
                $json['data']['headers'] = $headers;
                $json['data']['details'] = $details;
            }

            return $json;
        }
    }

    /*public function pur006()
    {
        $json = [
            'message' => 'Function Error'
        ];

        if (isset($this->report->report_function) && $this->report->report_function == "pur006") {
            $preparedFilter = $this->prepare_filter($this->parameters, $this->filters);

            if ($preparedFilter === false) {
                $json['status'] = false;
                $json['message'] = "Parameter needed.";
                return $json;
            }

            $this->CI->general->connectDbDefault();

            $details = [];
            $datas = [];
            $columns = [];

            $formatedDate = Carbon::createFromFormat('Y-m', $this->filters->PERIODE)
                ->format('Ym');

            if (!empty($this->filters->PLANT)) {
                foreach ($this->filters->PLANT as $plant) {
                    $filters = $this->filters;
                    $filters->PLANT = [$plant];
                    $filters->PERIODE = $formatedDate;
                    $filterPerPlant = $this->prepare_filter($this->parameters, $filters);

                    $query = $this->CI->db->query("EXEC dbo.SP_KIRANALYTICS_PUR006 ?, ?",
                        $filterPerPlant
                    );

                    $columns = $query->field_data();
                    $datas = $query->result_array();

                    $avgRealisasi = 0;
                    if (count($datas) > 0)
                        $avgRealisasi = from($datas)
                            ->count('$v["kolom5"]');

                    $detailItems = [];

                    foreach ($datas as $d) {
                        $items = [
                            [
                                "label" => "Qty Kontrak",
                                "value" => number_format($d['kolom3'], 4),
                                //                            "type" => "POSITIVE",
                                "code" => "kolom3",
                            ],
                            [
                                "label" => "Qty Realisasi (TON)",
                                "value" => number_format($d['kolom4'], 4),
                                "code" => "kolom4",
                                //                            "type" => "DEFAULT"
                            ],
                            [
                                "label" => "Qty Realisasi (%)",
                                "value" => number_format($d['kolom5'], 2),
                                "code" => "kolom5",
                                "type" => (number_format($d['kolom5'], 2) < 95) ? "NEGATIVE" : "DEFAULT"
                            ],
                        ];

                        $detailItems[] = [
                            "header" => $d['kolom1'],
                            "subheader" => $d['kolom2'],
                            "data" => $items
                        ];
                    }

                    $details[] = [
                        "header" => [
                            "header" => $plant,
                            "subheader" => "",
                            "label" => "Realisasi < 95%",
                            "value" => $avgRealisasi . " Vendor",
                            "type" => "DEFAULT"
                        ],
                        "data" => $detailItems
                    ];
                }
            }

            $report = [
                "header" => $this->report->nama_report,
                "chart" => null,
                "type" => 'WITHOUT_CHART',
                "dataDetail" => $details,
                'links' => [],
                'columns' => $columns,
                'rawData' => $datas,
                'parameters' => $this->parameters
            ];

            $json['payload'] = [
                'report' => $report,
                'filters' => [
                    "applied" => $this->filters,
                    "components" => [
                        [
                            "name" => "PLANT",
                            "type" => "select-group",
                            "multiple" => true,
                            "data" => $this->CI->CI->mrapp_master->master_plant()
                        ],
                        [
                            "name" => "PERIODE",
                            "type" => "DATE",
                            "format" => "YYYY-MM",
                            "default" => date('Y-m', time())
                        ],
                    ]
                ]
            ];
            $json['status'] = true;
            $json['message'] = '';

            $this->CI->general->closeDb();
        }
        return $json;
    }*/
}